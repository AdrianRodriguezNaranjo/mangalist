package com.adri.manga.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

import com.adri.manga.entity.models.Manga;
import com.adri.manga.entity.models.User;
import com.adri.manga.entity.services.IMangaServiceMangas;
import com.adri.manga.entity.services.IMangaServiceUsers;

@CrossOrigin(origins = "*")
@RestController
public class MangaControllerMangas {

	@Autowired
	private IMangaServiceMangas mangasService;
	
	@Autowired
	private IMangaServiceUsers userService;

	@GetMapping("/mangas")
	public List<Manga> getAll() {
		return mangasService.getAll();
	}
	
	@GetMapping("/mangas/users/{id}")
	private List<Manga> getAllMangasInUser(@PathVariable(value = "id") int id){
		return mangasService.getAllMangasInUser(id);
	}
	
	@PostMapping("/mangas/users/{userId}")
	public void post Manga manga, @PathVariable(value = "userId") long userId) {
	    User user = userService.getUserById(userId); // Obtener el usuario por ID (puedes implementar userService)
	    if (user != null) {
	        manga.getUsersWhereTofindThisManga().add(user); // Asociar el usuario con el manga
	        mangasService.post(manga); // Guardar el manga con el usuario asociado
	    }
	}

	
//	@PostMapping("/mangas/users/{userId}")
//    public void post(Manga manga, @PathVariable(value = "userId") long userId) {
//	    User user = userService.getUserById(userId); // Obtener el usuario por ID (puedes implementar userService)
//	    if (user != null) {
//	        manga.getUsersWhereTofindThisManga().add(user); // Asociar el usuario con el manga
//	        mangasService.post(manga); // Guardar el manga con el usuario asociado
//	    }
//    }

    @PutMapping("/mangas/{mangaId}/users/{userId}")
    public void put(Manga manga, @PathVariable(value = "userId") long userId, @PathVariable(value = "mangaId") long mangaId) {
        mangasService.put(manga, userId, mangaId);
    }

    @DeleteMapping("/mangas/{mangaId}/users/{userId}")
    public void delete(@PathVariable(value = "userId") long userId, @PathVariable(value = "mangaId") long mangaId) {
        mangasService.delete(userId, mangaId);
    }
	
//	@PostMapping("/mangas")
//	public void post(Manga manga) {
//		mangasService.post(manga);
//	}
//
//	@PutMapping("/mangas/{id}")
//	public void put(Manga manga, @PathVariable(value = "id") long id) {
//		mangasService.put(manga, id);
//	}
//
//	@DeleteMapping("/mangas/{id}")
//	public void delete(@PathVariable(value = "id") long id) {
//		mangasService.delete(id);
//	}
}
